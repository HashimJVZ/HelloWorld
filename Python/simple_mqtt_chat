import tkinter as tk
from tkinter import messagebox
import paho.mqtt.client as mqtt
import threading

# MQTT Constants
MQTT_BROKER = "broker.mqttdashboard.com"
MQTT_PORT = 1883
SUBSCRIBE_TOPIC = "A1B2C3" # customise as your choice
PUBLISH_TOPIC = "X1Y2Z3" # customise as your choice

def send_message():
    message = text_entry.get()
    client.publish(PUBLISH_TOPIC, str(message), qos=1)


def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("Connected to MQTT Broker")
    else:
        print("Failed to connect, return code:", rc)


def on_message(client, userdata, msg):
    message = msg.payload.decode()
    update_output(message)


def update_output(message):
    output_text.insert(tk.END, message + '\n')
    output_text.see(tk.END)  # Scroll to the bottom


def on_close():
    if messagebox.askokcancel("Quit", "Do you want to quit?"):
        client.disconnect()
        window.destroy()


def mqtt_thread():
    client.loop_forever()


# MQTT Client Setup
client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.connect(MQTT_BROKER, MQTT_PORT)
client.subscribe(SUBSCRIBE_TOPIC, qos=1)

# GUI Setup
window = tk.Tk()
window.title("Title here")

# Text Entry
text_entry = tk.Entry(window, width=20)
text_entry.grid(row=0, column=1, sticky=tk.N)

# Send Button
send_button = tk.Button(window, text="Send", width=8, command=send_message)
send_button.grid(row=1, column=1, sticky=tk.E)

# Text Box
output_text = tk.Text(window, width=30, height=6, wrap=tk.WORD, background="white")
output_text.grid(row=0, column=0, sticky=tk.W + tk.E)

# Quit Button
quit_button = tk.Button(window, text="Quit", width=6, command=on_close)
quit_button.grid(row=1, column=0, sticky=tk.W)

# Configure Grid Weights
window.grid_columnconfigure(0, weight=1)
window.grid_columnconfigure(1, weight=1)
window.grid_rowconfigure(0, weight=1)

# Start MQTT thread
mqtt_thread = threading.Thread(target=mqtt_thread)
mqtt_thread.daemon = True
mqtt_thread.start()

# Start GUI main loop
window.protocol("WM_DELETE_WINDOW", on_close)
window.mainloop()
